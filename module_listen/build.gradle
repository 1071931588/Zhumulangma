import com.android.build.gradle.LibraryPlugin
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

apply from: "../module.build.gradle"
android {
    defaultConfig {
        if (isModule.toBoolean()) {
            applicationId rootProject.ext.android.applicationId
        }
    }
}
if (!isModule.toBoolean()) {
//OkAspectj组件模式
    android.libraryVariants.all { variant ->
        LibraryPlugin plugin = project.plugins.getPlugin(LibraryPlugin)
        JavaCompile javaCompile = variant.javaCompile
        javaCompile.doLast {
            String[] args = ["-showWeaveInfo",
                             "-1.5",
                             "-inpath", javaCompile.destinationDir.toString(),
                             "-aspectpath", javaCompile.classpath.asPath,
                             "-d", javaCompile.destinationDir.toString(),
                             "-classpath", javaCompile.classpath.asPath,
                             "-bootclasspath", plugin.project.android.bootClasspath.join(
                    File.pathSeparator)]

            MessageHandler handler = new MessageHandler(true);
            new Main().run(args, handler)
        }
    }
} else {
    project.android.applicationVariants.all { variant ->
        if (!variant.buildType.isDebuggable()) {
            return;
        }
        JavaCompile javaCompile = variant.javaCompile
        javaCompile.doLast {
            String[] args = ["-showWeaveInfo",
                             "-1.8",
                             "-inpath", javaCompile.destinationDir.toString(),
                             "-aspectpath", javaCompile.classpath.asPath,
                             "-d", javaCompile.destinationDir.toString(),
                             "-classpath", javaCompile.classpath.asPath,
                             "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
            MessageHandler handler = new MessageHandler(true);
            new Main().run(args, handler);
        }
    }
}