if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
android {
    signingConfigs {
    debug {
        storeFile file('E:\\Project\\Android\\thomas.jks')
        storePassword '123698745'
        keyAlias = 'thomas'
        keyPassword '123698745'
    }
}
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        flavorDimensions versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //阿里路由框架配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi","armeabi-v7a","x86" //,"x86_64" , "arm64-v8a",
        }
        signingConfig signingConfigs.debug
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    exclude 'debug/**'
                }
            }
        }
    }
    dataBinding {
        enabled true
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
dependencies {
    implementation project(':lib_common')
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    annotationProcessor rootProject.ext.dependencies["okaspectjrt-compiler"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    annotationProcessor rootProject.ext.dependencies["lifecycle-compiler"]
}



